{
	"info": {
		"_postman_id": "c1123177-94ba-44a1-99b5-0bc81342cad9",
		"name": "Amanda_ApiLockeKey _automacao",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30574089",
		"_collection_link": "https://blue-star-904829.postman.co/workspace/Lockekey~dd1ce4c8-2637-43cb-8007-f22989f4af6f/collection/30574089-c1123177-94ba-44a1-99b5-0bc81342cad9?action=share&source=collection_link&creator=30574089"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login - admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"TokenAdmin\", JSON.parse(responseBody).token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mail\": \"{{mailAdmin}}\",\r\n    \"password\": \"{{passwordAdmin}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "Register - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Validating fullName\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).user.fullName).to.eql(pm.environment.get(\"FullName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating email\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).user.mail).to.eql(pm.environment.get(\"Email\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    var fullName = pm.environment.get(\"FullName\");\r",
											"    pm.expect(pm.response.text()).to.include(\"Olá \" + fullName + \" cadastro realizado com sucesso.\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"IdUserAdmin\", JSON.parse(responseBody).user._id);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function firstName() {\r",
											"    var firstName = [\"Carlos\", \"Rafael\", \"Lucas\", \"Gustavo\", \"Felipe\", \"Bruno\", \"Leonardo\", \"Fernando\", \"Rodrigo\", \"Eduardo\", \"Ana\", \"Maria\", \"Juliana\", \"Camila\", \"Isabela\", \"Aline\", \"Fernanda\", \"Carolina\", \"Mariana\", \"Larissa\", \"Vanessa\", \"Luciana\", \"Bianca\", \"Daniela\", \"Renata\", \"Tatiana\", \"Giovanni\", \"Marcelo\", \"Humberto\", \"Diego\", \"Renan\", \"Adriano\", \"Daniel\", \"Marcos\", \"Ricardo\", \"Anderson\", \"Fábio\", \"Paulo\", \"Samuel\", \"Geraldo\", \"Cristina\", \"Amanda\", \"Luana\", \"Eduardo\", \"Sophia\", \"Rafael\", \"Camila\", \"Lucas\", \"Larissa\", \"Gustavo\", \"Isabella\", \"Henrique\", \"Manuela\", \"Thiago\", \"Valentina\", \"Arthur\", \"Mariana\", \"Enzo\", \"Gabriela\", \"Pedro\", \"Clara\", \"Matheus\", \"Juliana\", \"Davi\", \"Carolina\", \"Lorenzo\", \"Laura\", \"Beatriz\", \"Leonardo\", \"Maria\", \"Giovanni\", \"Nina\", \"Felipe\", \"Amanda\", \"Vitor\", \"Isabel\", \"Mirella\", \"Fernanda\", \"Daniel\", \"Bruno\", \"Raquel\", \"Luciana\", \"Artur\", \"Sophie\"];\r",
											"\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FirstName\", firstName());\r",
											"\r",
											"function lastName() {\r",
											"    var lastName = [\"Santos\", \"Silva\", \"Pereira\", \"Oliveira\", \"Almeida\", \"Ferreira\", \"Costa\", \"Lima\", \"Rodrigues\", \"Gomes\", \"Martins\", \"Souza\", \"Rocha\", \"Carvalho\", \"Vieira\", \"Barbosa\", \"Andrade\", \"Fernandes\", \"Pinto\", \"Mendes\", \"Nunes\", \"Freitas\", \"Correia\", \"Machado\", \"Farias\", \"Dias\", \"Cunha\", \"Castro\", \"Cardoso\", \"Ribeiro\", \"Rezende\", \"Monteiro\", \"Campos\", \"Teixeira\", \"Leal\", \"Borges\", \"Franco\", \"Siqueira\", \"Sousa\", \"Moraes\", \"Brito\", \"Marques\", \"Lopes\", \"Duarte\",\"Fonseca\", \"Borges\", \"Franco\", \"Siqueira\", \"Sousa\", \"Moraes\", \"Brito\", \"Marques\", \"Lopes\", \"Duarte\", \"Fonseca\", \"Lemos\", \"Caldeira\", \"Pires\", \"Tavares\", \"Macedo\", \"Cavalcanti\", \"Cruz\", \"Nascimento\", \"Aguiar\", \"Peixoto\", \"Medeiros\", \"Vargas\", \"Barros\", \"Coutinho\", \"Xavier\", \"Lacerda\", \"Dantas\", \"Abreu\", \"Assis\", \"Azevedo\", \"Miranda\", \"Sales\", \"Pacheco\", \"Prado\", \"Teles\", \"Pessoa\", \"Domingues\", \"Camargo\", \"Moura\", \"Goulart\", \"Fagundes\", \"Nogueira\", \"Barreto\", \"Vasconcelos\", \"Braga\"];\r",
											"\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"LastName\", lastName());\r",
											"\r",
											"pm.environment.set(\"FullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
											"\r",
											"\r",
											"function generateCPF() {\r",
											"  const randomDigit = () => Math.floor(Math.random() * 10);\r",
											" \r",
											"  const cpfDigits = Array.from({ length: 9 }, randomDigit);\r",
											"  \r",
											"  let sum = 0;\r",
											"  for (let i = 10; i > 1; i--) {\r",
											"    sum += cpfDigits[10 - i] * i;\r",
											"  }\r",
											"  const firstVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(firstVerifierDigit === 10 ? 0 : firstVerifierDigit);\r",
											"  \r",
											"  sum = 0;\r",
											"  for (let i = 11; i > 1; i--) {\r",
											"    sum += cpfDigits[11 - i] * i;\r",
											"  }\r",
											"  const secondVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(secondVerifierDigit === 10 ? 0 : secondVerifierDigit);\r",
											"  \r",
											"  return cpfDigits.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cpf\", generateCPF());\r",
											"\r",
											"function domain(){\r",
											"    var domain = [\"@gmail.com\", \"@hotmail.com\", \"@yandex.com\", \"@cortex.com\", \"@qacoders.com\", \"@amandex.com\", \"@bertolux.com\", \"@jeritoca.com\", \"@uol.com\"];\r",
											"    var radomItem = domain[Math.floor(Math.random() * domain.length)]\r",
											"    return radomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var mail = pm.variables.get(\"FirstName\").toLowerCase()+pm.variables.get(\"LastName\").toLowerCase()+ \"_\"+ pm.variables.replaceIn('{{$guid}}')+ pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Email\", mail());\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token is true\", function () {\r",
											"   pm.expect(JSON.parse(responseBody)).to.have.property(\"token\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"TokenUser\", JSON.parse(responseBody).token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"mail\": \"{{Email}}\",\r\n    \"password\": \"{{Password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get-Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//validar se ta gravando o que ta retornando no responsebody\r",
											"pm.test(\"Validate data\", function () {\r",
											"    pm.expect(pm.variables.get(\"_id\")).to.eql(JSON.parse(responseBody)._id)\r",
											"})\r",
											"\r",
											"// função para verificar ordem alfabética\r",
											"let responseItems = pm.response.json();\r",
											"\r",
											"function isFullnameAlphabetical(array) {\r",
											"    const fullnames = array.map(item => item.fullname);\r",
											"\r",
											"    return JSON.stringify(fullnames) === JSON.stringify(fullnames.slice().sort());\r",
											"}\r",
											"\r",
											"tests[\"Objects are in alphabetical order by fullname\"] = isFullnameAlphabetical(responseItems);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Count-Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fullName\": \"Diego Trocado\",\r\n    \"mail\": \"{{Email}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/{{IdUserAdmin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"{{IdUserAdmin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update-Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function gerarSenha() {\r",
											"  const caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
											"  const comprimentoMinimo = 6;\r",
											"  const comprimentoMaximo = 12;\r",
											"  \r",
											"  let senhaArray = [];\r",
											"\r",
											"  // Garante pelo menos um caractere maiúsculo, minúsculo, número e especial\r",
											"  senhaArray.push(caracteres[Math.floor(Math.random() * 26)]); // Caractere maiúsculo\r",
											"  senhaArray.push(caracteres[26 + Math.floor(Math.random() * 26)]); // Caractere minúsculo\r",
											"  senhaArray.push(caracteres[52 + Math.floor(Math.random() * 10)]); // Número\r",
											"  senhaArray.push(caracteres[62 + Math.floor(Math.random() * 4)]); // Caractere especial\r",
											"\r",
											"  const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
											"\r",
											"  for (let i = 0; i < comprimentoRestante; i++) {\r",
											"    senhaArray.push(caracteres[Math.floor(Math.random() * caracteres.length)]);\r",
											"  }\r",
											"\r",
											"  return shuffleString(senhaArray.join(\"\"));\r",
											"}\r",
											"\r",
											"function shuffleString(string) {\r",
											"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
											"}\r",
											"\r",
											"pm.environment.set(\"NewPassword\", gerarSenha());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{TokenUser}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "token",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"{{NewPassword}}\",\r\n    \"confirmPassword\": \"{{NewPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/password/{{IdUserAdmin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"password",
										"{{IdUserAdmin}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete-User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{TokenUser}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/admin/{{IdUserAdmin}}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										"admin",
										"{{IdUserAdmin}}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Not functional",
					"item": [
						{
							"name": "Register - No name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"\",\r\n  \"mail\": \"testee@email.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Name  incomplete",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Antonio\",\r\n  \"mail\": \"testee@email.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Name more 99 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"FullName99characters\", \"Eva DataTech Soluções Inovadoras Em Sustentabilidade E TecnologiBWPTecnologiSustentabilidadeData\" + pm.variables.replaceIn('{{$randomCurrencyCode}}'));\r",
											"\r",
											"function generateCPF() {\r",
											"  const randomDigit = () => Math.floor(Math.random() * 10);\r",
											" \r",
											"  const cpfDigits = Array.from({ length: 9 }, randomDigit);\r",
											"  \r",
											"  let sum = 0;\r",
											"  for (let i = 10; i > 1; i--) {\r",
											"    sum += cpfDigits[10 - i] * i;\r",
											"  }\r",
											"  const firstVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(firstVerifierDigit === 10 ? 0 : firstVerifierDigit);\r",
											"  \r",
											"  sum = 0;\r",
											"  for (let i = 11; i > 1; i--) {\r",
											"    sum += cpfDigits[11 - i] * i;\r",
											"  }\r",
											"  const secondVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(secondVerifierDigit === 10 ? 0 : secondVerifierDigit);\r",
											"  \r",
											"  return cpfDigits.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cpf\", generateCPF());\r",
											"\r",
											"function domain(){\r",
											"    var domain = [\"@gmail.com\", \"@hotmail.com\", \"@yandex.com\", \"@cortex.com\", \"@qacoders.com\", \"@amandex.com\", \"@bertolux.com\", \"@jeritoca.com\", \"@uol.com\"];\r",
											"    var radomItem = domain[Math.floor(Math.random() * domain.length)]\r",
											"    return radomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var mail = pm.variables.get(\"FirstName\").toLowerCase()+pm.variables.get(\"LastName\").toLowerCase()+ \"_\"+ pm.variables.replaceIn('{{$guid}}')+ pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Email\", mail());\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName99characters}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Name 100 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"FullName100characters\", \"Eva DataTech Soluções Inovadoras Em Sustentabilidade DE TecnologiBWPTecnologiSustentabilidadeData\" + pm.variables.replaceIn('{{$randomCurrencyCode}}'));\r",
											"\r",
											"function generateCPF() {\r",
											"  const randomDigit = () => Math.floor(Math.random() * 10);\r",
											" \r",
											"  const cpfDigits = Array.from({ length: 9 }, randomDigit);\r",
											"  \r",
											"  let sum = 0;\r",
											"  for (let i = 10; i > 1; i--) {\r",
											"    sum += cpfDigits[10 - i] * i;\r",
											"  }\r",
											"  const firstVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(firstVerifierDigit === 10 ? 0 : firstVerifierDigit);\r",
											"  \r",
											"  sum = 0;\r",
											"  for (let i = 11; i > 1; i--) {\r",
											"    sum += cpfDigits[11 - i] * i;\r",
											"  }\r",
											"  const secondVerifierDigit = (sum * 10) % 11;\r",
											"  cpfDigits.push(secondVerifierDigit === 10 ? 0 : secondVerifierDigit);\r",
											"  \r",
											"  return cpfDigits.join('');\r",
											"}\r",
											"\r",
											"pm.environment.set(\"cpf\", generateCPF());\r",
											"\r",
											"function domain(){\r",
											"    var domain = [\"@gmail.com\", \"@hotmail.com\", \"@yandex.com\", \"@cortex.com\", \"@qacoders.com\", \"@amandex.com\", \"@bertolux.com\", \"@jeritoca.com\", \"@uol.com\"];\r",
											"    var radomItem = domain[Math.floor(Math.random() * domain.length)]\r",
											"    return radomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Domain\", domain());\r",
											"\r",
											"function mail(){\r",
											"    var mail = pm.variables.get(\"FirstName\").toLowerCase()+pm.variables.get(\"LastName\").toLowerCase()+ \"_\"+ pm.variables.replaceIn('{{$guid}}')+ pm.variables.get(\"Domain\");\r",
											"    return mail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"Email\", mail());\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName100characters}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Name more 101 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"FullName101characters\", \"Eva DataTech Soluções Inovadoras Em Sustentabilidade The TecnologiBWPTecnologiSustentabilidadeData\" + pm.variables.replaceIn('{{$randomCurrencyCode}}'));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName101characters}}\",\r\n  \"mail\": \"teste@teste.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Invalid name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"Joaquim *Nogues \",\r\n  \"mail\": \"teste2@teste.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Invalid email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"email.email.com.br\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Email extra space",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"emailteste @teste.com\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Short password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"Aa@1\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"Aa@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Long password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"Pa@12023Aj315mtre\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"Pa@12023Aj315mtre\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - Diferent confirm password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"1234@Test\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"5234@Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Register - No confirmation password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{Email}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n   \"cpf\": {{cpf}},\r\n  \"confirmPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/user/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Password without numbers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"mail\": \"danielarodrigues@gmail.com\",\r\n    \"password\": \"@Test\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Password without @",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"mail\": \"danielarodrigues@gmail.com\",\r\n    \"password\": \"1234Test\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - email without .com",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"mail\": \"amanda.balbio\",\r\n    \"password\": \"1234@Test\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - No email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"\",\r\n    \"password\": \"{{Password}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - No password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mail\": \"manuelacunha@outlook.com\",\r\n    \"password\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Board",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "Functional - Board Register- Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schema'))).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Validate message\", function(){\r",
											"    pm.expect(pm.response.json().msg).to.be.eql(\"Cadastro realizado com sucesso!\")\r",
											"})\r",
											"var boardCode = pm.response.json().newBoard.boardCode;\r",
											"\r",
											"/*pm.test(\"Check if boardCode has 2 digits\", function() {\r",
											"    pm.expect(/^\\d{2}$/.test(boardCode)).to.be.true;\r",
											"});*/\r",
											"\r",
											"/*check if reponse is equal request/////\r",
											"var boardNameResponse = pm.response.json().newBoard.boardName;\r",
											"var boardNameRequest = pm.request.json().boardName;\r",
											"\r",
											"pm.test(\"Check if the boardName in the response matches the one in the request\", function() {\r",
											"    pm.expect(boardNameResponse).to.equal(boardNameRequest);\r",
											"});*/\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function inicialName() {\r",
											"    var inicialName = [\"Inovação\", \"Desenvolvimento\", \"Operação\", \"Tecnologia\", \"Recurso\", \"Estratégia\", \"Finanças\", \"Relação\", \"Qualidade\", \"Comunicação\", \"Pesquisa\", \"Serviço\", \"Expansão\", \"Parceria\", \"Inclusão\", \"Ética\", \"Logística\", \"Planejamento\", \"Assunto\", \"Investimento\", \"Projeto\", \"Produto\", \"Sustentabilidade\", \"Operação\", \"Venda\", \"Transformação\", \"Relação\", \"Gestão\", \"Saúde\", \"Estratégia\", \"Segurança\", \"Desenvolvimento\", \"Aquisição\", \"Produção\", \"Tecnologia\", \"Governança\", \"Parceria\", \"Exportação\", \"Segurança\", \"Exploratório\", \"Desdobramento\", \"Estratégico\", \"Crescimento\", \"Pioneirismo\", \"Capacitação\", \"Integrativo\", \"Eficiência\", \"Proeminência\", \"Fusão\", \"Dinamismo\", \"Aprimoramento\", \"Otimização\", \"Visão\", \"Conquista\", \"Transformação\", \"Incorporação\", \"Perspectiva\", \"Fomento\", \"Início\", \"Reformulação\", \"Vanguarda\", \"Experimento\", \"Proatividade\", \"Revolução\", \"Desempenho\", \"Promoção\", \"Elevação\", \"Aceleração\", \"Prospecto\", \"Impulso\", \"Cibernético\", \"Ingresso\", \"Futurista\", \"Investimento\", \"Avanço\", \"Instituição\", \"Catalisador\", \"Vitalidade\", \"Envolvimento\", \"Sintonia\", \"Exploração\", \"Entendimento\"];\r",
											"\r",
											"    var randomItem = inicialName[Math.floor(Math.random() * inicialName.length)];\r",
											"\r",
											"    return randomItem\r",
											"}\r",
											"\r",
											"pm.environment.set(\"InicialName\", inicialName());\r",
											"\r",
											"\r",
											"\r",
											"function finalName() {\r",
											"    var finalName = [\"Empresarial\", \"Sustentável\", \"Estratégica\", \"da Informação\", \"Humano Global\", \"de Marketing\", \"Internacional\", \"Governamental\", \"e Excelência\", \"Corporativo\", \"e Desenvolvimento\", \"ao Cliente\", \"Global de Mercado\", \"e Diversidade\", \"Integrada\", \"Estratégico\", \"Legal\", \"com Investidor\", \"Inovador\", \"Produto\", \"Sustentável\", \"Global\", \"de Venda\", \"Digital\", \"Internacional\", \"de Risco\", \"e Bem-Estar\", \"Ambiental\", \"Comunitário\", \"de Talento\", \"Social\", \"Regulatório\", \"de Produção\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"de Exportação\", \"Filantrópico\", \"Regional\", \"de Preço\", \"em Serviço\", \"de Varejo\", \"de Fornecedor\", \"Empreendimento\", \"Informativo\", \"Capital Humano\", \"Desempenho\", \"Internacionalização\", \"Governança\", \"Jurídico\", \"Investidor\", \"Inovador\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"Filantrópico\", \"Regional\", \"de Preço\", \"de Fornecimento\", \"de Comunicação\"];\r",
											"\r",
											"    var randomItem = finalName[Math.floor(Math.random() * finalName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FinalName\", finalName());\r",
											"\r",
											"pm.environment.set(\"BoardName\", pm.variables.get(\"InicialName\") + \" \" + pm.variables.get(\"FinalName\"));\r",
											"\r",
											"pm.globals.unset('schema')\r",
											"\r",
											"pm.globals.set('schema', {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"msg\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"newBoard\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"boardName\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"audit\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"registrationDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"registeredBy\": {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"userId\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"userLogin\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"userId\",\r",
											"                    \"userLogin\"\r",
											"                  ]\r",
											"                },\r",
											"                \"_id\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"registrationDate\",\r",
											"                \"registeredBy\",\r",
											"                \"_id\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"__v\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"_id\",\r",
											"        \"boardName\",\r",
											"        \"status\",\r",
											"        \"audit\",\r",
											"        \"__v\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"msg\",\r",
											"    \"newBoard\"\r",
											"  ]\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{BoardName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Functional - Board Register- boardname with 50 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201 \", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomString50characters() {\r",
											"    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&';\r",
											"    var result = '';\r",
											"    for (var i = 0; i < 50; i++) {\r",
											"        var randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"var randomPhrase = generateRandomString50characters();\r",
											"\r",
											"pm.environment.set(\"50charactersString\", generateRandomString50characters());\r",
											"\r",
											"pm.test(\"Check if 50 characters is true\", function() {\r",
											"    pm.expect(randomPhrase.length).to.equal(50);\r",
											"    pm.expect(/^[A-Za-z&]+$/.test(randomPhrase)).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{50charactersString}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Functional - Board Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Rh\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/6568bc5379bf6a8fe95d9272",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6568bc5379bf6a8fe95d9272"
									]
								}
							},
							"response": []
						},
						{
							"name": "Functional - Board List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let boards = pm.response.json();\r",
											"\r",
											"let primeiroBoardCode = boards[0].boardCode;\r",
											"pm.test(\"First boardCode is equal '01'\", function() {\r",
											"    pm.expect(primeiroBoardCode).to.equal(\"01\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an array of objects\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('array')\r",
											"});\r",
											"\r",
											"pm.test(\"List is not empty\", function() {\r",
											"    pm.expect(boards.length > 0).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"BoardName exist\", function() {\r",
											"     pm.expect(boards.some(board => board.boardName)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"BoardCode exist\", function() {\r",
											"     pm.expect(boards.some(board => board.boardCode)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Status exist\", function() {\r",
											"     pm.expect(boards.some(board => board.status)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    pm.expect(pm.response.json()[0].status).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.environment.set(\"BoardId\", pm.response.json()[0]._id);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Functional - Board Count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let response = pm.response.json(); \r",
											"let count = response.count; \r",
											"\r",
											"/*function isNumber(value) {\r",
											"    return typeof value === 'number' && !isNaN(value);\r",
											"}\r",
											"\r",
											"pm.test(\"Response is a number\", function() {\r",
											"    pm.expect(isNumber(count)).to.be.true;\r",
											"});*/\r",
											"\r",
											"pm.test(\"Check if count is a number\", function() {\r",
											"    pm.expect(pm.response.json().count).to.be.a('number')\r",
											"})\r",
											"\r",
											"function isCountNonNegative(value) {\r",
											"    return typeof value === 'number' && value >= 0;\r",
											"}\r",
											"\r",
											"pm.test(\"Count is greater than or equal to zero\", function() {\r",
											"    pm.expect(isCountNonNegative(count)).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Functional - Board List ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object')\r",
											"});\r",
											"\r",
											"let boards = pm.response.json();\r",
											"\r",
											"pm.test(\"Board is not empty\", function() {\r",
											"    pm.expect(boards).to.not.be.empty;\r",
											"});\r",
											"\r",
											"let response = pm.response.json();\r",
											"let board = response.board; // Acesse a propriedade 'board'\r",
											"\r",
											"pm.test(\"BoardName exists\", function() {\r",
											"    pm.expect(board.hasOwnProperty(\"boardName\")).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"BoardCode exists\", function() {\r",
											"    pm.expect(board.hasOwnProperty(\"boardCode\")).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Status exists\", function() {\r",
											"    pm.expect(board.hasOwnProperty(\"status\")).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    pm.expect(pm.response.json().board.status).to.equal(true);\r",
											"});\r",
											"//VERIFICAR COMO COLOCAR DINAMICO O ID DO BOARDNAME(Usar variavel{{boardId}}\r",
											"//pm.environment.set(\"boardId\", JSON.parse(responseBody).board._id);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/6568bc5379bf6a8fe95d9272",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6568bc5379bf6a8fe95d9272"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Not functional",
					"item": [
						{
							"name": "Board Register- No name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check error message\", function () {\r",
											"pm.expect(pm.variables.get(\"msgBoardError\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname with 49 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"Boardname49characters\", \"Departamento&DesenvolvimentoEstrategico&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{Boardname49characters}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname with 50 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"Boardname50characters\", \"Departamento&DesenvolvimentoEstrategico&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{Boardname50characters}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname with 51 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"Boardname51characters\", \"Departamentos&DesenvolvimentoEstrategico&&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"{{Boardname51characters}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname with @",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Diretoria @ Inovação\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname already exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Financeiro\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Register- Boardname including number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Financeiro02\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Update - boardName empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/{id}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"{id}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Update - boardName including number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Operações23\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/6567bb4379bf6a8fe95d9269",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6567bb4379bf6a8fe95d9269"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board Update - boardName including @",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"boardName\": \"Oper@ções\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/board/6567bb4379bf6a8fe95d9269",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6567bb4379bf6a8fe95d9269"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board List - wrong id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/6568bc5379bf6a8fe95d9271",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6568bc5379bf6a8fe95d9271"
									]
								}
							},
							"response": []
						},
						{
							"name": "Board List - id with diferent format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/board/6568bc5379bf6a8fe95d927",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"board",
										"6568bc5379bf6a8fe95d927"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "Company - Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.unset('schema')\r",
											"\r",
											"pm.globals.set('schema', {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"msg\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"newCompany\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"_id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"corporateName\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"registerCompany\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"mail\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"matriz\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"responsibleContact\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"telephone\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"serviceDescription\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"status\": {\r",
											"          \"type\": \"boolean\"\r",
											"        },\r",
											"        \"address\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"zipCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"city\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"state\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"district\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"street\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"number\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"complement\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"country\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"zipCode\",\r",
											"                \"city\",\r",
											"                \"state\",\r",
											"                \"district\",\r",
											"                \"street\",\r",
											"                \"number\",\r",
											"                \"complement\",\r",
											"                \"country\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"audit\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"registrationDate\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"registeredBy\": {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"userId\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"userLogin\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"userId\",\r",
											"                    \"userLogin\"\r",
											"                  ]\r",
											"                },\r",
											"                \"_id\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"registrationDate\",\r",
											"                \"registeredBy\",\r",
											"                \"_id\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"_id\",\r",
											"        \"corporateName\",\r",
											"        \"registerCompany\",\r",
											"        \"mail\",\r",
											"        \"matriz\",\r",
											"        \"responsibleContact\",\r",
											"        \"telephone\",\r",
											"        \"serviceDescription\",\r",
											"        \"status\",\r",
											"        \"address\",\r",
											"        \"audit\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"msg\",\r",
											"    \"newCompany\"\r",
											"  ]\r",
											"})\r",
											"\r",
											"function firstCorporateName() {\r",
											"    var firstCorporateName = [\"Zynthify\", \"Quixo\", \"Innovexa\", \"Cybrify\", \"NexaWave\", \"Vortexa\", \"QuantaCore\", \"Synthifyr\", \"Nexova\", \"SpectraFlex\", \"Quantumix\", \"Flexara\", \"Swiftify\", \"Zenova\", \"VivaSync\", \"Pixify\", \"ElevaTech\", \"Prowize\", \"Zentrova\", \"InfiniSync\", \"VibraLink\", \"Quantumfy\", \"OmniFuse\", \"Synthra\", \"Fluxify\", \"Zenitha\", \"Elevarix\", \"Prismify\", \"Nuvatech\", \"XyloCore\", \"Glintify\", \"Quasarix\", \"Fuzionova\", \"Nexifyx\", \"VirtuoSync\", \"Quantumara\", \"Versify\", \"ZephyraTech\", \"DynaSync\", \"Xylonova\", \"SynergetiX\", \"Infinitra\", \"Fluxara\", \"EchoVibe\", \"NovaFlexa\", \"Vortexify\", \"Synthronix\", \"Voxify\", \"Orbitalix\", \"Vivifyr\", \"Quotientra\", \"Zenixar\", \"Opulentix\", \"Pulsify\", \"Zenara\"];\r",
											"\r",
											"    var randomItem = firstCorporateName[Math.floor(Math.random() * firstCorporateName.length)];\r",
											"\r",
											"    return randomItem\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FirstCorporateName\", firstCorporateName());\r",
											"\r",
											"\r",
											"\r",
											"function finalCorporateName() {\r",
											"    var finalCorporateName = [ \"Quantum Innovations\", \"Velocity Solutions\", \"Pinnacle Dynamics\", \"Nexus Enterprises\", \"Synergetic Systems\", \"Vortex Technologies\", \"EchoSphere Innovations\", \"QuantumWave Solutions\", \"Zenith Dynamics\", \"InnovateX Ventures\", \"NovaSync Technologies\", \"SwiftCore Dynamics\", \"FusionFlex Solutions\", \"QuantumFyre Innovations\", \"Quasar Nexus\", \"Elevate Solutions\", \"VirtuoDynamics Ventures\", \"Prismify Technologies\", \"OmniFlex Innovations\", \"Opulent Innovations\", \"Inovação Quântica\", \"Soluções Velozes\", \"Dinâmica Pinnacle\", \"Empreendimentos Nexus\", \"Sistemas Sinérgicos\", \"Tecnologias Vortex\", \"Inovações EchoSphere\", \"Soluções QuantumWave\", \"Dinâmica Zenith\", \"Ventures Inovadores\", \"Tecnologias NovaSync\", \"Dinâmica SwiftCore\", \"Soluções FusionFlex\", \"Inovações QuantumFyre\", \"Nexus Quasar\", \"Soluções Elevate\", \"Ventures VirtuoDynamics\", \"Tecnologias Prismify\", \"Inovações OmniFlex\", \"Inovações Opulent\"];\r",
											"\r",
											"    var randomItem = finalCorporateName[Math.floor(Math.random() * finalCorporateName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FinalCorporateName\", finalCorporateName());\r",
											"\r",
											"pm.environment.set(\"CorporateName\", pm.variables.get(\"FirstCorporateName\") + \" \" + pm.variables.get(\"FinalCorporateName\"));\r",
											"\r",
											"//email\r",
											"\r",
											"function companyMail(){\r",
											"    var companyMail = pm.variables.get(\"FirstCorporateName\").toLowerCase()+ \"_\"+ pm.variables.replaceIn('{{$guid}}')+ \"@\"+  pm.variables.get(\"FirstCorporateName\").toLowerCase() +  \".com\";\r",
											"    return companyMail;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"CompanyMail\", companyMail());\r",
											"\r",
											"//cnpj\r",
											"\r",
											"function registerCompany() {\r",
											"  let cnpj = \"\";\r",
											"\r",
											"  for (let i = 0; i < 14; i++) {\r",
											"    cnpj += Math.floor(Math.random() * 10);\r",
											"  }\r",
											"\r",
											"  return cnpj;\r",
											"}\r",
											"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
											"\r",
											"//matriz\r",
											"function matrizType(){\r",
											"    var matrizType = [\"SA\", \"Ltda.\", \"Inc.\", \"LLC\", \"PLC\", \"Ltd.\", \"LLP\", \"Co.\", \"Corp.\", \"GmbH\", \"SAS\", \"SRL\", \"Oy\"]\r",
											"\r",
											"     var randomItem = matrizType[Math.floor(Math.random() * matrizType.length)];\r",
											"\r",
											"    return randomItem;\r",
											"\r",
											"}\r",
											"pm.environment.set(\"MatrizType\", matrizType());\r",
											"\r",
											"pm.environment.set(\"Matriz\",pm.variables.get(\"CorporateName\") + \" \" +pm.variables.get(\"MatrizType\"));\r",
											"\r",
											"//telefone\r",
											"function telephone() {\r",
											"  let phoneNumber = \"\";\r",
											"\r",
											"  for (let i = 0; i < 11; i++) {\r",
											"    phoneNumber += Math.floor(Math.random() * 10);\r",
											"  }\r",
											"\r",
											"  return phoneNumber;\r",
											"}\r",
											"pm.environment.set(\"Telephone\", telephone());\r",
											"\r",
											"//reponsibleContact\r",
											"function firstContactName() {\r",
											"    var firstContactName = [\"Carlos\", \"Rafael\", \"Lucas\", \"Gustavo\", \"Felipe\", \"Bruno\", \"Leonardo\", \"Fernando\", \"Rodrigo\", \"Eduardo\", \"Ana\", \"Maria\", \"Juliana\", \"Camila\", \"Isabela\", \"Aline\", \"Fernanda\", \"Carolina\", \"Mariana\", \"Larissa\", \"Vanessa\", \"Luciana\", \"Bianca\", \"Daniela\", \"Renata\", \"Tatiana\", \"Giovanni\", \"Marcelo\", \"Humberto\", \"Diego\", \"Renan\", \"Adriano\", \"Arthur\", \"Mariana\", \"Enzo\", \"Gabriela\", \"Pedro\", \"Clara\", \"Matheus\", \"Juliana\", \"Davi\", \"Carolina\", \"Lorenzo\", \"Laura\", \"Beatriz\", \"Leonardo\", \"Maria\", \"Giovanni\", \"Nina\", \"Felipe\", \"Amanda\", \"Vitor\", \"Isabel\", \"Mirella\", \"Fernanda\", \"Daniel\", \"Bruno\", \"Raquel\", \"Luciana\", \"Artur\", \"Sophie\"];\r",
											"\r",
											"    var randomItem = firstContactName[Math.floor(Math.random() * firstContactName.length)];\r",
											"\r",
											"    return randomItem\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FirstContactName\", firstContactName());\r",
											"\r",
											"function lastContactName() {\r",
											"    var lastContactName = [\"Santos\", \"Silva\", \"Pereira\", \"Oliveira\", \"Almeida\", \"Ferreira\", \"Costa\", \"Lima\", \"Rodrigues\", \"Gomes\", \"Martins\", \"Souza\", \"Rocha\", \"Carvalho\", \"Vieira\", \"Barbosa\", \"Andrade\", \"Goulart\", \"Fagundes\", \"Nogueira\", \"Barreto\", \"Vasconcelos\", \"Braga\"];\r",
											"\r",
											"    var randomItem = lastContactName[Math.floor(Math.random() * lastContactName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"LastContactName\", lastContactName());\r",
											"\r",
											"pm.environment.set(\"ResponsibleContact\", pm.variables.get(\"FirstContactName\") + \" \" + pm.variables.get(\"LastContactName\"));\r",
											"\r",
											"//zipcode\r",
											"function generateRandomZipCode() {\r",
											"    let zipcode = \"\";\r",
											"    \r",
											"    for (let i = 0; i < 8; i++) {\r",
											"        zipcode += Math.floor(Math.random() * 10);\r",
											"    }\r",
											"    \r",
											"    return zipcode;\r",
											"}\r",
											"pm.environment.set(\"ZipCode\", generateRandomZipCode());\r",
											"\r",
											"\r",
											"pm.environment.set(\"ServiceDescription\", pm.variables.replaceIn('{{$randomBs}}')\r",
											");\r",
											"\r",
											"pm.environment.set(\"AddressNumber\", pm.variables.replaceIn('{{$randomInt}}'));\r",
											"\r",
											"pm.environment.set(\"StreetAddress\", pm.variables.replaceIn('{{$randomStreetName}}'));\r",
											"\r",
											"pm.environment.set(\"City\", pm.variables.replaceIn('{{$randomCity}}'));\r",
											"\r",
											"pm.environment.set(\"Country\", pm.variables.replaceIn('{{$randomCity}}'));\r",
											"\r",
											"pm.environment.set(\"State\", pm.variables.replaceIn(\"{{$randomCountryCode}}\").toUpperCase());\r",
											"\r",
											"pm.environment.set(\"AddressComplement\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\").toUpperCase());\r",
											"\r",
											"pm.environment.set(\"District\", pm.variables.replaceIn('{{$randomCity}}'));\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    pm.expect(pm.response.json().newCompany.status).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schema'))).to.be.true;\r",
											"});\r",
											"\r",
											"//RegisterCompany=CNPJ\r",
											"pm.test(\"Validating RegisterCompany\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.registerCompany).to.eql(pm.environment.get(\"RegisterCompany\"));\r",
											"});\r",
											"\r",
											"const registerCompany = pm.response.json().newCompany.registerCompany;\r",
											"pm.test(\"RegisterCompany is a number\", function() {\r",
											"    pm.expect(Number(registerCompany)).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"RegisterCompany has 14 digits\",function() {\r",
											"    pm.expect(registerCompany).to.match(/^\\d{14}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Validating CorporateName\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.corporateName).to.eql(pm.environment.get(\"CorporateName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating ResponsibleContact\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.responsibleContact).to.eql(pm.environment.get(\"ResponsibleContact\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Mail\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.mail).to.eql(pm.environment.get(\"CompanyMail\"));\r",
											"});\r",
											"\r",
											"function isValidEmail(email) {\r",
											"    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r",
											"\r",
											"    return emailRegex.test(email);\r",
											"}\r",
											"\r",
											"const email = pm.response.json().newCompany.mail;\r",
											"\r",
											"pm.test(\"Mail is in a valid format\", function()  {\r",
											"    pm.expect(isValidEmail(email)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Telephone\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.telephone).to.eql(\"55\" + (pm.environment.get(\"Telephone\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Telephone is a Brazilian number\", function() {\r",
											"    pm.expect(JSON.parse(responseBody).newCompany.telephone).to.include(\"55\");\r",
											"});\r",
											"\r",
											"const telephone = pm.response.json().newCompany.telephone;\r",
											"pm.test(\"Telephone has only numbers\", function() {\r",
											"    pm.expect(Number(telephone)).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Validating ServiceDescription\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.serviceDescription).to.eql(pm.environment.get(\"ServiceDescription\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Matriz\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.matriz).to.eql(pm.environment.get(\"Matriz\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Country\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].country).to.eql(pm.environment.get(\"Country\"));\r",
											"});\r",
											"\r",
											"const zipcode = pm.response.json().newCompany.address[0].zipcode;\r",
											"pm.test(\"Zipcode is a  number\", function() {\r",
											"    pm.expect(Number(zipcode)).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Validating City\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].city).to.eql(pm.environment.get(\"City\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating State\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].state).to.eql(pm.environment.get(\"State\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating District\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].district).to.eql(pm.environment.get(\"District\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Street\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].street).to.eql(pm.environment.get(\"StreetAddress\"));\r",
											"});\r",
											"\r",
											"const number = pm.response.json().newCompany.address[0].number;\r",
											"pm.test(\"Street number is a  number\", function() {\r",
											"    pm.expect(Number(number)).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Validating Street number\", function () {\r",
											"   pm.expect(JSON.parse(responseBody).newCompany.address[0].number).to.eql(pm.environment.get(\"AddressNumber\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let companies = pm.response.json();\r",
											"\r",
											"pm.test(\"check if list is not empty\", function() {\r",
											"    pm.expect(companies.length > 0).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if response is an array of objects\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('array')\r",
											"});\r",
											"\r",
											"pm.test(\"Check if corporateName exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.corporateName)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if registerCompany exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.registerCompany)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if mail exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.mail)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if telephone exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.telephone)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if city exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.address[0].city)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if state exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.address[0].state)).to.be.true;\r",
											"})\r",
											"\r",
											"pm.test(\"Check if country exists\", function() {\r",
											"     pm.expect(companies.some(companies => companies.address[0].country)).to.be.true;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Count field exists\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property('count')\r",
											"})\r",
											"\r",
											"let response = pm.response.json(); \r",
											"let count = response.count; \r",
											"\r",
											"pm.test(\"Response is an object\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object')\r",
											"});\r",
											"\r",
											"pm.test(\"Count are numbers\", function() {\r",
											"    pm.expect(pm.response.json().count).to.be.a('number')\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company list ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Board is not empty\", function() {\r",
											"    pm.expect(pm.response.json()).to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Check if response is an object\", function () {\r",
											"    pm.expect(pm.response.json()).to.be.an('object')\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/657f8852a5bbd176b8a23221",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"657f8852a5bbd176b8a23221"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Not functional",
					"item": [
						{
							"name": "corporateName",
							"item": [
								{
									"name": "Company - CorporateName empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName with numbers and letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"AJ4 Uniao\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName only with letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"ABC do zf\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName only with numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"89\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName with @",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Testt @ Test\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"\r",
													"pm.environment.set(\"CorporateName100characters\", \"Eco DataTech Soluções Inovadoras em Sustentabilidade e Tecnologi\" + pm.variables.replaceIn('{{$randomUUID}}'));\r",
													"\r",
													"\r",
													" "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName100characters}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName with 99characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"CorporateName99characters\", \"Eco DataTech Soluções Inovadoras em Sustentabilidade e Tecnolog\" + pm.variables.replaceIn('{{$randomUUID}}'));\r",
													"\r",
													"\r",
													" "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName99characters}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - CorporateName with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"Eco DataTech Soluções Inovadoras em Sustentabilidade de Tecnologia Avançada Ltda das Soluções e cia .\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "registerCompany",
							"item": [
								{
									"name": "cOMPANY - RegisterCompany empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"abcdepoiklpoiu\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with letters and numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"123456789123pl\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with special character $",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"$$$$$$$$$$$$$$\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with special character &",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"&&&&&&&&&&&&&&\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany duplicated",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"12345678912345\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with 13 numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"RegisterCompany13numbers\", \"58964\" + pm.variables.replaceIn('{{$randomBankAccount}}'));\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany13numbers}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with 14 numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"RegisterCompany14numbers\", \"1235641234\" + pm.variables.replaceIn('{{$randomCreditCardMask}}'));\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany14numbers}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - RegisterCompany with 15 numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"RegisterCompany15numbers\", \"51235641234\" + pm.variables.replaceIn('{{$randomCreditCardMask}}'));\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany15numbers}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Mail",
							"item": [
								{
									"name": "Company - Mail without @",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"email.com.br\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - mail null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - mail missing name before @",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"@mail.com.br\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - mail missing domain",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"mail@.com\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ServiceDescription",
							"item": [
								{
									"name": "Company -serviceDescription null",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - serviceDescription with numbers only",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"123456789124 123456789\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "matriz",
							"item": [
								{
									"name": "Company - Matriz empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Matriz with letters and numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"abc123\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Matriz only with numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"147\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Matriz with 99 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"matriz99characters\", \"Eco DataTech Soluções Inovadoras em Sustentabilidade e Tecnolog\" + pm.variables.replaceIn('{{$randomUUID}}'));\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{matriz99characters}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Matriz with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"matriz100characters\", \"TEco DataTech Soluções Inovadoras em Sustentabilidade e Tecnolog\" + pm.variables.replaceIn('{{$randomUUID}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{matriz100characters}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Matriz with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"matriz101characters\", \"Techo DataTech Soluções Inovadoras em Sustentabilidade e Tecnolog\" + pm.variables.replaceIn('{{$randomUUID}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{matriz101characters}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "responsibleContact",
							"item": [
								{
									"name": "Company - responsibleContact empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - ResponsibleContact with two names",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"Amanda Silva\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - ResponsibleContact with three names",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"Lucas Silvio Silva\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - ResponsibleContact with 99characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"ResponsibleContact99characters\", \"ResponsibleContactaacharactersResponsibleContactaacharactersResponsibleContactaacharactersasd\" + pm.variables.replaceIn('{{$randomCurrencyCode}}')+ pm.variables.replaceIn('{{$randomCurrencyCode}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"55{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact99characters}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - ResponsibleContact with 100 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"ResponsibleContact100characters\", \"ResponsibleContactaacharactersResponsibleContactaacharactersResponsibleContactaacharactersasdf\" + pm.variables.replaceIn('{{$randomCurrencyCode}}')+ pm.variables.replaceIn('{{$randomCurrencyCode}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact100characters}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - ResponsibleContact with 101 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"ResponsibleContact101characters\", \"ResponsibleContactaacharactersResponsibleContactaacharactersResponsibleContactaacharactersasdfg\" + pm.variables.replaceIn('{{$randomCurrencyCode}}')+ pm.variables.replaceIn('{{$randomCurrencyCode}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact101characters}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "telephone",
							"item": [
								{
									"name": "Company - Telephone empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Telephone with letters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"abcdefghijklop\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Telephone with letters and numbers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55abc874kjh412\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Telephone with special character &",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"&&&&&&&&&&&&&&\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Telephone with 14 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"Telephone14numbers\", \"852369\" + pm.variables.replaceIn('{{$randomCreditCardMask}}')+ pm.variables.replaceIn('{{$randomCreditCardMask}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone14numbers}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								},
								{
									"name": "Company - Telephone with 15 characters",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"function registerCompany() {\r",
													"  let cnpj = \"\";\r",
													"\r",
													"  for (let i = 0; i < 14; i++) {\r",
													"    cnpj += Math.floor(Math.random() * 10);\r",
													"  }\r",
													"\r",
													"  return cnpj;\r",
													"}\r",
													"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
													"\r",
													"pm.environment.set(\"Telephone15numbers\", \"8523690\" + pm.variables.replaceIn('{{$randomCreditCardMask}}')+ pm.variables.replaceIn('{{$randomCreditCardMask}}'));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone15numbers}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/company",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"company"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Address",
							"item": [
								{
									"name": "Address-Street",
									"item": [
										{
											"name": "Company - Address-Street name empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name with special character $",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"$\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name empty Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name empty Copy",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name with 49 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"Rua Soluções Inovadoras em Sustentabilidade de Te\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name with 50 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"Rua Soluções Inovadoras e Sustentabilidade de Te\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address-Street name with 81 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"alalalalalpoiujhytrekiuytrewqakkkkkkkkkkkokkkkkkkkkkkkkkkkkkkkkkkksdfvcxzskkkkkaq\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address- Number",
									"item": [
										{
											"name": "Company - Streeet number empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Streeet number with special character $",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"$\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Streeet number with 9 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"123456789\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Streeet number with 10 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Streeet number with 11 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"12345678901\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - Complement",
									"item": [
										{
											"name": "Company - Complement with 79 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"Suite23A-4thFloor-Apt5678-ZX9Y2LPQ3R4S5T6U7V8W9X0A1B2C3D4E5F6G7H8I9J0K1L2M3NY5Z\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Complement with 80 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"Suite23A-4thFloor-Apt5678-ZX9Y2LPQ3R4S5T6U7V8W9X0A1B2C3D4E5F6G7H8I9J0K1L2M3NY5Z0\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Complement with 81characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"Suite23A-4thFloorr-Apt5678-ZX9Y2LPQ3R4S5T6U7V8W9X0A1B2C3D4E5F6G7H8I9J0K1L2M3NY5Z0\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Complement empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Complement with special character $",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"$$$\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - District",
									"item": [
										{
											"name": "Company - District empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"frente\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - District  with special character $",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"$$\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"frente\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - District district with 49 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"Suite23A-4thFloor-Apt5678-ZX9Y2LPQ3R4S5T6U7V8W9X0\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"frente\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - District with 50 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"Suite23A-4thFloor-Apt5678-ZX9Y2LPQ3R4S5T6U7V89X010\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"frente\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - District with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"Suite23A-4thFloor-Apt5678-ZX9Y2LPQ3R4S5T6U7V89X010b\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"1234567890\",\r\n      \"complement\": \"frente\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - Country",
									"item": [
										{
											"name": "Company - Address Country empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address Country with 49 letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"San Vincent e Grenadines San Vincent e Grenadines\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address Country with 50 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"San Vincent e Grenadines San Vincent et Grenadines\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address Country with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"San Vincent e Grenadines San Vincent det Grenadines\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - city",
									"item": [
										{
											"name": "Company - Address City empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with number",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"1254\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with 49 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"San Vincent e Grenadines San Vincent e Grenadines\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with 50 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"San Vincent e Grenadines San Vincent de Grenadines\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with 51 characters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"San Vincent e Grenadines San Vincent lee Grenadines\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with \"ª\"",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"Mª das Dores\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with º",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"Dº do sertão\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address City with \"-\"",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"São-Conrado\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - State",
									"item": [
										{
											"name": "Company - Address State empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with special character $",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"$$\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with 1 character",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"S\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with number",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"12\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with 2 lowercase letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"pl\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with 1 uppercase and 1 lowercase letter",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"Pl\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address State with 3 letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"{{ZipCode}}\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"ABC\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Address - Zip code",
									"item": [
										{
											"name": "Company - Address zipcode empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address zipcode with special character",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"$$$$$$$$\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address zipcode with 7 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"1234567\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address zipcode with 8 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"12345678\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address zipcode with 9 numbers",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"123456789\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										},
										{
											"name": "Company - Address zipcode with letters",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"function registerCompany() {\r",
															"  let cnpj = \"\";\r",
															"\r",
															"  for (let i = 0; i < 14; i++) {\r",
															"    cnpj += Math.floor(Math.random() * 10);\r",
															"  }\r",
															"\r",
															"  return cnpj;\r",
															"}\r",
															"pm.environment.set(\"RegisterCompany\", registerCompany());\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"corporateName\": \"{{CorporateName}}\",\r\n  \"registerCompany\": \"{{RegisterCompany}}\",\r\n  \"mail\": \"{{CompanyMail}}\",\r\n  \"matriz\": \"{{Matriz}}\",\r\n  \"responsibleContact\": \"{{ResponsibleContact}}\",\r\n  \"telephone\": \"55{{Telephone}}\",\r\n  \"serviceDescription\": \"{{ServiceDescription}}\",\r\n  \"address\": [\r\n    {\r\n      \"zipCode\": \"abcdefgh\",\r\n      \"city\": \"{{City}}\",\r\n      \"state\": \"{{State}}\",\r\n      \"district\": \"{{District}}\",\r\n      \"street\": \"{{StreetAddress}}\",\r\n      \"number\": \"{{AddressNumber}}\",\r\n      \"complement\": \"{{AddressComplement}}\",\r\n      \"country\": \"{{Country}}\"\r\n    }\r\n  ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/api/company",
													"host": [
														"{{url}}"
													],
													"path": [
														"api",
														"company"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Company list wrong id format",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/657f8852a5bbd176b8a2322",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"657f8852a5bbd176b8a2322"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company list with wrong Id number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/company/657f8852a5bbd176b8a01221",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"company",
										"657f8852a5bbd176b8a01221"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CostCenter",
			"item": [
				{
					"name": "CostCenter - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function inicialName() {\r",
									"    var inicialName = [\"Inovação\", \"Desenvolvimento\", \"Operação\", \"Tecnologia\", \"Recurso\", \"Estratégia\", \"Finanças\", \"Relação\", \"Qualidade\", \"Comunicação\", \"Pesquisa\", \"Serviço\", \"Expansão\", \"Parceria\", \"Inclusão\", \"Ética\", \"Logística\", \"Planejamento\", \"Assunto\", \"Investimento\", \"Projeto\", \"Produto\", \"Sustentabilidade\", \"Operação\", \"Venda\", \"Transformação\", \"Relação\", \"Gestão\", \"Saúde\", \"Estratégia\", \"Segurança\", \"Desenvolvimento\", \"Aquisição\", \"Produção\", \"Tecnologia\", \"Governança\", \"Parceria\", \"Exportação\", \"Segurança\", \"Exploratório\", \"Desdobramento\", \"Estratégico\", \"Crescimento\", \"Pioneirismo\", \"Capacitação\", \"Integrativo\", \"Eficiência\", \"Proeminência\", \"Fusão\", \"Dinamismo\", \"Aprimoramento\", \"Otimização\", \"Visão\", \"Conquista\", \"Transformação\", \"Incorporação\", \"Perspectiva\", \"Fomento\", \"Início\", \"Reformulação\", \"Vanguarda\", \"Experimento\", \"Proatividade\", \"Revolução\", \"Desempenho\", \"Promoção\", \"Elevação\", \"Aceleração\", \"Prospecto\", \"Impulso\", \"Cibernético\", \"Ingresso\", \"Futurista\", \"Investimento\", \"Avanço\", \"Instituição\", \"Catalisador\", \"Vitalidade\", \"Envolvimento\", \"Sintonia\", \"Exploração\", \"Entendimento\"];\r",
									"\r",
									"    var randomItem = inicialName[Math.floor(Math.random() * inicialName.length)];\r",
									"\r",
									"    return randomItem\r",
									"}\r",
									"\r",
									"pm.environment.set(\"InicialName\", inicialName());\r",
									"\r",
									"\r",
									"\r",
									"function finalName() {\r",
									"    var finalName = [\"Empresarial\", \"Sustentável\", \"Estratégica\", \"da Informação\", \"Humano Global\", \"de Marketing\", \"Internacional\", \"Governamental\", \"e Excelência\", \"Corporativo\", \"e Desenvolvimento\", \"ao Cliente\", \"Global de Mercado\", \"e Diversidade\", \"Integrada\", \"Estratégico\", \"Legal\", \"com Investidor\", \"Inovador\", \"Produto\", \"Sustentável\", \"Global\", \"de Venda\", \"Digital\", \"Internacional\", \"de Risco\", \"e Bem-Estar\", \"Ambiental\", \"Comunitário\", \"de Talento\", \"Social\", \"Regulatório\", \"de Produção\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"de Exportação\", \"Filantrópico\", \"Regional\", \"de Preço\", \"em Serviço\", \"de Varejo\", \"de Fornecedor\", \"Empreendimento\", \"Informativo\", \"Capital Humano\", \"Desempenho\", \"Internacionalização\", \"Governança\", \"Jurídico\", \"Investidor\", \"Inovador\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"Filantrópico\", \"Regional\", \"de Preço\", \"de Fornecimento\", \"de Comunicação\"];\r",
									"\r",
									"    var randomItem = finalName[Math.floor(Math.random() * finalName.length)];\r",
									"\r",
									"    return randomItem;\r",
									"}\r",
									"\r",
									"pm.environment.set(\"FinalName\", finalName());\r",
									"\r",
									"pm.environment.set(\"CostCenterName\", pm.variables.get(\"InicialName\") + \" \" + pm.variables.get(\"FinalName\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"costCenterName\": \"{{CostCenterName}}\",\r\n  \"boardId\": \"{{BoardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"CostCenterId\", pm.response.json()[0]._id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/costCenter/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter Inativar centro de custos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test(\"Check msg: Centro de custos inativado com sucesso!\", function () {\r",
									"    pm.expect(pm.globals.get(\"msgCostCenterSuccessInactive\")).to.eql(JSON.parse(responseBody).msg)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter/status/6586df30a5bbd176b8a41fad",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6586df30a5bbd176b8a41fad"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter Inativar centro de custos já inativado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"\r",
									"pm.test(\"Check msg: Centro de custos inativado com sucesso!\", function () {\r",
									"    pm.expect(pm.globals.get(\"msgCostCenterSuccessInactive\")).to.eql(JSON.parse(responseBody).msg)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter/status/6586df30a5bbd176b8a41fad",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6586df30a5bbd176b8a41fad"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter Inativar centro de custos com id invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter/status/6586df30a5bbd176b8a41faz",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6586df30a5bbd176b8a41faz"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter Status empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter/status/6586df30a5bbd176b8a41fad",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6586df30a5bbd176b8a41fad"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter Status invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"falso\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/costCenter/status/6586df30a5bbd176b8a41fad",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"status",
								"6586df30a5bbd176b8a41fad"
							]
						}
					},
					"response": []
				},
				{
					"name": "CostCenter count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/costCenter/count",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"costCenter",
								"count"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Department",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "Department Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Cadastro realizado com sucesso.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentCreated\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function inicialName() {\r",
											"    var inicialName = [\"Inovação\", \"Desenvolvimento\", \"Operação\", \"Tecnologia\", \"Recurso\", \"Estratégia\", \"Finanças\", \"Relação\", \"Qualidade\", \"Comunicação\", \"Pesquisa\", \"Serviço\", \"Expansão\", \"Parceria\", \"Inclusão\", \"Ética\", \"Logística\", \"Planejamento\", \"Assunto\", \"Investimento\", \"Projeto\", \"Produto\", \"Sustentabilidade\", \"Operação\", \"Venda\", \"Transformação\", \"Relação\", \"Gestão\", \"Saúde\", \"Estratégia\", \"Segurança\", \"Desenvolvimento\", \"Aquisição\", \"Produção\", \"Tecnologia\", \"Governança\", \"Parceria\", \"Exportação\", \"Segurança\", \"Exploratório\", \"Desdobramento\", \"Estratégico\", \"Crescimento\", \"Pioneirismo\", \"Capacitação\", \"Integrativo\", \"Eficiência\", \"Proeminência\", \"Fusão\", \"Dinamismo\", \"Aprimoramento\", \"Otimização\", \"Visão\", \"Conquista\", \"Transformação\", \"Incorporação\", \"Perspectiva\", \"Fomento\", \"Início\", \"Reformulação\", \"Vanguarda\", \"Experimento\", \"Proatividade\", \"Revolução\", \"Desempenho\", \"Promoção\", \"Elevação\", \"Aceleração\", \"Prospecto\", \"Impulso\", \"Cibernético\", \"Ingresso\", \"Futurista\", \"Investimento\", \"Avanço\", \"Instituição\", \"Catalisador\", \"Vitalidade\", \"Envolvimento\", \"Sintonia\", \"Exploração\", \"Entendimento\"];\r",
											"\r",
											"    var randomItem = inicialName[Math.floor(Math.random() * inicialName.length)];\r",
											"\r",
											"    return randomItem\r",
											"}\r",
											"\r",
											"pm.environment.set(\"InicialName\", inicialName());\r",
											"\r",
											"\r",
											"\r",
											"function finalName() {\r",
											"    var finalName = [\"Empresarial\", \"Sustentável\", \"Estratégica\", \"da Informação\", \"Humano Global\", \"de Marketing\", \"Internacional\", \"Governamental\", \"e Excelência\", \"Corporativo\", \"e Desenvolvimento\", \"ao Cliente\", \"Global de Mercado\", \"e Diversidade\", \"Integrada\", \"Estratégico\", \"Legal\", \"com Investidor\", \"Inovador\", \"Produto\", \"Sustentável\", \"Global\", \"de Venda\", \"Digital\", \"Internacional\", \"de Risco\", \"e Bem-Estar\", \"Ambiental\", \"Comunitário\", \"de Talento\", \"Social\", \"Regulatório\", \"de Produção\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"de Exportação\", \"Filantrópico\", \"Regional\", \"de Preço\", \"em Serviço\", \"de Varejo\", \"de Fornecedor\", \"Empreendimento\", \"Informativo\", \"Capital Humano\", \"Desempenho\", \"Internacionalização\", \"Governança\", \"Jurídico\", \"Investidor\", \"Inovador\", \"Cultural\", \"Emergente\", \"Tecnológico\", \"Filantrópico\", \"Regional\", \"de Preço\", \"de Fornecimento\", \"de Comunicação\"];\r",
											"\r",
											"    var randomItem = finalName[Math.floor(Math.random() * finalName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FinalName\", finalName());\r",
											"\r",
											"pm.environment.set(\"DepartmentNameCreated\", pm.variables.get(\"InicialName\") + \" \" + pm.variables.get(\"FinalName\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameCreated}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "?????????Department list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "???????Department list ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department count",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  - ID -Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Cadastro atualizado com sucesso!\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgUpdatedDepartment\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"xvinho\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Not Functional",
					"item": [
						{
							"name": "DepartmentName with 49 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Cadastro realizado com sucesso.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentCreated\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    pm.environment.set(\"Name49characters\", \"Departamento&DesenvolvimentoEstrategico&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{Name49characters}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName with 50characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Cadastro realizado com sucesso.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentCreated\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"Name50characters\", \"Departamento&DesenvolvimentoEstrategicos&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{Name50characters}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName duplicated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Não é possível salvar esse registro. Departamento já cadastrado no sistema.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentDuplicated\")).to.eql(JSON.parse(responseBody).alert[0])\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Test&\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName costCenterId empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: O campo 'ID do centro de custos' é obrigatório.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgCostCenterIdRequired\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNameCreated}}\",\r\n  \"costCenterId\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName costCenterId invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Telefonia\",\r\n  \"costCenterId\": \"5265656521kh7\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName with special character &",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Cadastro realizado com sucesso.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentCreated\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"DepartmentNamecharacter&\", \"Teste&\" + pm.variables.replaceIn('{{$randomLastName}}')); \r",
											"\r",
											"pm.environment.set(\"Name50characters\", \"Departamento&DesenvolvimentoEstrategicos&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{DepartmentNamecharacter&}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department id invalido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/15454654564454",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"15454654564454"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName without token",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/15454654564454",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"15454654564454"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName with token invalid",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/15454654564454?token=eyJhbGcUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGUwOGIyZDI5MDAyZTM2MGY1ZDgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCR2TERtakRLT3lZUElRVFEzVkxiMDVPdTdZUHdRWkJFVkNLbGhqODc1Vjg0NEtSMk02Q29ucSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjMyOjI0IEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlMDhiMmQyOTAwMmUzNjBmNWQ5In1dLCJfX3YiOjAsImlhdCI6MTcwMzk1MDgxMywiZXhwIjoxNzA0MDM3MjEzfQ._QcN_o_g0FXg-d2NaaH59OBsjb33RQi_MMwn_C8HLX",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"15454654564454"
									],
									"query": [
										{
											"key": "token",
											"value": "eyJhbGcUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGUwOGIyZDI5MDAyZTM2MGY1ZDgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCR2TERtakRLT3lZUElRVFEzVkxiMDVPdTdZUHdRWkJFVkNLbGhqODc1Vjg0NEtSMk02Q29ucSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjMyOjI0IEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlMDhiMmQyOTAwMmUzNjBmNWQ5In1dLCJfX3YiOjAsImlhdCI6MTcwMzk1MDgxMywiZXhwIjoxNzA0MDM3MjEzfQ._QcN_o_g0FXg-d2NaaH59OBsjb33RQi_MMwn_C8HLX"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName without token invalid Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/15454654564454",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"15454654564454"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department count Token invalid",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/count?token=eI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGUwOGIyZDI5MDAyZTM2MGY1ZDgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCR2TERtakRLT3lZUElRVFEzVkxiMDVPdTdZUHdRWkJFVkNLbGhqODc1Vjg0NEtSMk02Q29ucSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjMyOjI0IEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlMDhiMmQyOTAwMmUzNjBmNWQ5In1dLCJfX3YiOjAsImlhdCI6MTcwMzk1MDgxMywiZXhwIjoxNzA0MDM3MjEzfQ._QcN_o_g0FXg-d2NaaH59OBsjb33RQi_MMwn_C8HLXI",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"count"
									],
									"query": [
										{
											"key": "token",
											"value": "eI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTMzMGUwOGIyZDI5MDAyZTM2MGY1ZDgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCR2TERtakRLT3lZUElRVFEzVkxiMDVPdTdZUHdRWkJFVkNLbGhqODc1Vjg0NEtSMk02Q29ucSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoic2V4dGEtZmVpcmEsIDIwLzEwLzIwMjMsIDIwOjMyOjI0IEJSVCIsInJlZ2lzdHJhdGlvbk51bWJlciI6IjAxIiwiY29tcGFueUlkIjoiUWEuQ29kZXJzIiwiX2lkIjoiNjUzMzBlMDhiMmQyOTAwMmUzNjBmNWQ5In1dLCJfX3YiOjAsImlhdCI6MTcwMzk1MDgxMywiZXhwIjoxNzA0MDM3MjEzfQ._QcN_o_g0FXg-d2NaaH59OBsjb33RQi_MMwn_C8HLXI"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Department count token empty",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/department/count",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName with 49 characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"    pm.environment.set(\"Name49characters\", \"Departamento&DesenvolvimentoEstrategico&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{Name49characters}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "DepartmentName with 50characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"Name50characters\", \"Departamento&DesenvolvimentoEstrategicos&&&\" + pm.variables.replaceIn('{{$randomCountryCode}}') + pm.variables.replaceIn('{{$randomCurrencyCode}}') + pm.variables.replaceIn('{{$randomLocale}}'));\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"{{Name50characters}}\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  - DepartmentName invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: Não foi possível encontrar o departamento com o id especificado\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgDepartmentInvalidId\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"novo\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/6586e960a5bbd176b8a42cdc",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"6586e960a5bbd176b8a42cdc"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  -DepartmentName with special character #",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo 'diretoria' só pode conter letras e o caractere especial '&'.\", function () {\r",
											"    pm.expect(pm.environment.get(\"msgDepartmentCharacters\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Agro#\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  -DepartmentName with special character \"&\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check msg: Cadastro atualizado com sucesso!\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgUpdatedDepartment\")).to.eql(JSON.parse(responseBody).msg)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"Agro & Tech\",\r\n  \"costCenterId\": \"{{CostCenterId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  -CostCenterId empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check msg: O campo 'ID do centro de custos' é obrigatório.\", function () {\r",
											"    pm.expect(pm.globals.get(\"msgCostCenterNameRequired\")).to.eql(JSON.parse(responseBody).error[0])\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"New\",\r\n  \"costCenterId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department   -CostCenterId invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"departmentName\": \"New\",\r\n  \"costCenterId\": \"345225482898\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department   - Status- empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/status/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"status",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						},
						{
							"name": "Department  - Status- invalid format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"verdadeiro\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/department/status/658c6434a5bbd176b8a44984",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"department",
										"status",
										"658c6434a5bbd176b8a44984"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{TokenAdmin}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}